使用 web.xml 文件进行配置的时候过滤器的执行顺序
filtera before dofilter invoked
filterb before dofilter invoked
filterc before dofilter invoked
目标资源
filterc after dofilter invoked
filterb after dofilter invoked
filtera after dofilter invoked
执行的过滤器顺序和 web.xml 文件中配置的 <filter-mapping> 的顺序有关







过滤器的配置也可以不在 web.xml 文件中进行配置，例如把现在 web.xml 中的配置信息以注解的形式进行配置
使用注解进行过滤器配置的时候，过滤器的执行顺序
filtera before dofilter invoked
filterb before dofilter invoked
filterc before dofilter invoked
目标资源
filterc after dofilter invoked
filterb after dofilter invoked
filtera after dofilter invoked
实际上影响过滤器执行顺序的是类名（类名的字典顺序）







注解解释：
public @interface WebFilter {
    String description() default "";
    String displayName() default "";
    WebInitParam[] initParams() default {};  =========== 此注解标识初始配置
    String filterName() default "";
    String smallIcon() default "";
    String largeIcon() default "";
    String[] servletNames() default {}; ============== 标识通过 servlet 别名的方式进行过滤请求
    String[] value() default {};  ==================== value 属性和 urlPatterns 互为别名，只有一个 value 属性可以省略不写
    String[] urlPatterns() default {}; =============== 标识访问路径的方式进行过滤请求
    DispatcherType[] dispatcherTypes() default {DispatcherType.REQUEST};
    boolean asyncSupported() default false;
}